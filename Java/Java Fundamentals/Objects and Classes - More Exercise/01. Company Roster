package ObjectsAndClassesME;

import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class CompanyRosterN {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = Integer.parseInt(scanner.nextLine());
        Map<String, Map<String, Double>> departmentsMap = new LinkedHashMap<>();


        for (int i = 1; i <= n; i++) {

            String input = scanner.nextLine();
            String[] inputArr = input.split(" ");

            String name = inputArr[0];
            Double salary = Double.parseDouble(inputArr[1]);
            String department = inputArr[3];
            String email = "";
            String age = "";

            if (inputArr.length == 4) {

                email = "n/a";
                age = "-1";

            } else if (inputArr.length == 5) {

                String lastInput = inputArr[4];

                if (lastInput.contains("@")) {

                    email = inputArr[4];
                    age = "-1";

                } else {

                    email = "n/a";
                    age = inputArr[4];
                }
            } else if (inputArr.length == 6) {

                email = inputArr[4];
                age = inputArr[5];
            }

            StringBuilder keyBuilder = new StringBuilder();
            keyBuilder.append(name).append(" ").append(email).append(" ").append(age);

            if (!departmentsMap.containsKey(department)) {

                departmentsMap.put(department, new LinkedHashMap<>());
                departmentsMap.get(department).put(keyBuilder.toString(), salary);

            } else {

                departmentsMap.get(department).put(keyBuilder.toString(), salary);
            }

        }


        double maxSalary = Double.MIN_VALUE;
        String topDepartment = "";

        for (Map.Entry<String, Map<String, Double>> entry : departmentsMap.entrySet()) {

            double sum = 0;
            for (Map.Entry<String, Double> employee : entry.getValue().entrySet()) {

                sum = sum + employee.getValue();
            }
            double avgSalary = sum / entry.getValue().size();

            if (avgSalary > maxSalary) {

                maxSalary = avgSalary;
                topDepartment = entry.getKey();
            }

        }

        if (!departmentsMap.isEmpty()) {

            System.out.printf("Highest Average Salary: %s%n", topDepartment);

            departmentsMap.get(topDepartment).entrySet().stream()
                    .sorted((e1, e2) -> e2.getValue().compareTo(e1.getValue()))
                    .forEach(entry -> System.out.printf("%s %.2f %s %s%n",
                            entry.getKey().split(" ")[0], entry.getValue(),
                            entry.getKey().split(" ")[1],
                            entry.getKey().split(" ")[2]));

        }


    }
}
