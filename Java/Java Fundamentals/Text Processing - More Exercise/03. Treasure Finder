package TextProcessingME;

import java.util.Arrays;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class TreasureFinder {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int[] keys = Arrays.stream(scanner.nextLine().split("\\s+")).mapToInt(Integer::parseInt).toArray();
        String input = scanner.nextLine();

        while (!input.equals("find")) {

            StringBuilder decryptedMessage = new StringBuilder();
            int j = 0;

            for (int i = 0; i <= input.length() - 1; i++) {

                if (j > keys.length - 1) {

                    j = 0;
                }

                char currentChar = input.charAt(i);
                int currentKey = keys[j];

                char newChar = (char) (currentChar - currentKey);

                decryptedMessage.append(newChar);

                j++;

            }

            String message = decryptedMessage.toString();
            String regexTreasure = "&(?<treasure>.+)&";
            Pattern patternTreasure = Pattern.compile(regexTreasure);
            Matcher matcherTreasure = patternTreasure.matcher(message);
            String treasure = "";

            if (matcherTreasure.find()) {

                treasure = matcherTreasure.group("treasure");
            }

            String regexPlace = "<(?<place>.+)>";
            Pattern patternPlace = Pattern.compile(regexPlace);
            Matcher matcherPlace = patternPlace.matcher(message);
            String place = "";

            if (matcherPlace.find()) {

                place = matcherPlace.group("place");
            }

            System.out.printf("Found %s at %s%n", treasure, place);

            input = scanner.nextLine();

        }
    }
}
