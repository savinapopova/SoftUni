package Advanced_MultidimensionalArraysLab;

import java.util.Arrays;
import java.util.Scanner;

public class MaximumSumOf2x2Submatrix {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int[] rowsAndCols = readArray(scanner.nextLine(), ", ");
        int rows = rowsAndCols[0];
        int cols = rowsAndCols[1];

        int[][] matrix = readMatrix(scanner,rows, cols, ", ");


        int[][] maxSumSubMatrix = getMaxSumSubMatrix(matrix);
        printMatrix(maxSumSubMatrix);

        System.out.println(getElementsSum(maxSumSubMatrix));

    }

    private static void printMatrix(int[][] matrix) {

        for (int[] arr : matrix) {

            for (int element : arr) {

                System.out.print(element + " ");
            }
            System.out.println();


        }
    }

    private static int getElementsSum(int[][] matrix) {

        int sum = 0;

        for (int row = 0; row < matrix.length; row++) {
            for (int col = 0; col < matrix[row].length; col++) {
                sum += matrix[row][col];
            }
        }
        return sum;
    }

    private static int[][] getMaxSumSubMatrix(int[][] matrix) {

        int maxSum = 0;
        int bestRow = 0;
        int bestCol = 0;

        for (int row = 0; row < matrix.length -1; row++) {
            for (int col = 0; col < matrix[row].length - 1; col++) {

                int sum =
                        matrix[row][col] +
                                matrix[row][col + 1] +
                                matrix[row + 1][col] +
                                matrix[row + 1][col + 1];

                if (sum > maxSum) {

                    maxSum = sum;
                    bestRow = row;
                    bestCol = col;

                }
            }

        }
        return new int[][] {
                {matrix[bestRow][bestCol], matrix[bestRow][bestCol + 1]},
                {matrix[bestRow + 1][bestCol], matrix[bestRow + 1][bestCol + 1]}

        };
    }

    private static int[] readArray(String line, String pattern) {
        return Arrays.stream(line.split(pattern))
                .mapToInt(Integer::parseInt).toArray();
    }

    private static int[][] readMatrix(Scanner scanner, int rows, int cols, String pattern) {

        int[][] matrix = new int[rows][cols];
        for (int row = 0; row < rows; row++) {

            matrix[row] = readArray(scanner.nextLine(), pattern);

        }
        return matrix;
    }
}
